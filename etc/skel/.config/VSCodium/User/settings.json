{
  "vscode-neovim.neovimExecutablePaths.linux": "/usr/bin/nvim",
  "vscode-neovim.neovimInitVimPaths.linux": "$HOME/.config/nvim/init.vim",
  "whichkey.sortOrder": "alphabetically",
  "whichkey.delay": 0,
  "whichkey.bindings": [
    {
      "key": ";",
      "name": "commands",
      "type": "command",
      "command": "workbench.action.showCommands"
    },
    {
      "key": "/",
      "name": "comment",
      "type": "command",
      "command": "vscode-neovim.send",
      "args": "<C-/>"
    },
    {
      "key": "?",
      "name": "View All References",
      "type": "command",
      "command": "references-view.find",
      "when": "editorHasReferenceProvider"
    },
    {
      "key": "b",
      "name": "Buffers/Editors...",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Show all buffers/editors",
          "type": "command",
          "command": "workbench.action.showAllEditors"
        },
        {
          "key": "d",
          "name": "Close active editor",
          "type": "command",
          "command": "workbench.action.closeActiveEditor"
        },
        {
          "key": "h",
          "name": "Move editor into left group",
          "type": "command",
          "command": "workbench.action.moveEditorToLeftGroup"
        },
        {
          "key": "j",
          "name": "Move editor into below group",
          "type": "command",
          "command": "workbench.action.moveEditorToBelowGroup"
        },
        {
          "key": "k",
          "name": "Move editor into above group",
          "type": "command",
          "command": "workbench.action.moveEditorToAboveGroup"
        },
        {
          "key": "l",
          "name": "Move editor into right group",
          "type": "command",
          "command": "workbench.action.moveEditorToRightGroup"
        },
        {
          "key": "m",
          "name": "Close other editors",
          "type": "command",
          "command": "workbench.action.closeOtherEditors"
        },
        {
          "key": "n",
          "name": "Next editor",
          "type": "command",
          "command": "workbench.action.nextEditor"
        },
        {
          "key": "p",
          "name": "Previous editor",
          "type": "command",
          "command": "workbench.action.previousEditor"
        },
        {
          "key": "N",
          "name": "New untitled editor",
          "type": "command",
          "command": "workbench.action.files.newUntitledFile"
        },
        {
          "key": "u",
          "name": "Reopen closed editor",
          "type": "command",
          "command": "workbench.action.reopenClosedEditor"
        },
        {
          "key": "y",
          "name": "Copy buffer to clipboard",
          "type": "commands",
          "commands": [
            "editor.action.selectAll",
            "editor.action.clipboardCopyAction",
            "cancelSelection"
          ]
        }
      ]
    },
    {
      "key": "d",
      "name": "Debug...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Start debug",
          "type": "command",
          "command": "workbench.action.debug.start"
        },
        {
          "key": "S",
          "name": "Stop debug",
          "type": "command",
          "command": "workbench.action.debug.stop"
        },
        {
          "key": "c",
          "name": "Continue debug",
          "type": "command",
          "command": "workbench.action.debug.continue"
        },
        {
          "key": "p",
          "name": "Pause debug",
          "type": "command",
          "command": "workbench.action.debug.pause"
        },
        {
          "key": "r",
          "name": "Run without debugging",
          "type": "command",
          "command": "workbench.action.debug.run"
        },
        {
          "key": "R",
          "name": "Restart ebug",
          "type": "command",
          "command": "workbench.action.debug.restart"
        },
        {
          "key": "i",
          "name": "Step into",
          "type": "command",
          "command": "workbench.action.debug.stepInto"
        },
        {
          "key": "s",
          "name": "Step over",
          "type": "command",
          "command": "workbench.action.debug.stepOver"
        },
        {
          "key": "o",
          "name": "Step out",
          "type": "command",
          "command": "workbench.action.debug.stepOut"
        },
        {
          "key": "b",
          "name": "Toggle breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleBreakpoint"
        },
        {
          "key": "B",
          "name": "Toggle inline breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleInlineBreakpoint"
        },
        {
          "key": "j",
          "name": "Jump to cursor",
          "type": "command",
          "command": "debug.jumpToCursor"
        },
        {
          "key": "v",
          "name": "REPL",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        },
        {
          "key": "w",
          "name": "Focus on watch window",
          "type": "command",
          "command": "workbench.debug.action.focusWatchView"
        },
        {
          "key": "W",
          "name": "Add to watch",
          "type": "command",
          "command": "editor.debug.action.selectionToWatch"
        }
      ]
    },
    {
      "key": "e",
      "name": "Toggle Explorer",
      "type": "command",
      "command": "workbench.action.toggleSidebarVisibility"
    },
    {
      "key": "f",
      "name": "Find & Replace...",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "File",
          "type": "command",
          "command": "editor.action.startFindReplaceAction"
        },
        {
          "key": "s",
          "name": "Symbol",
          "type": "command",
          "command": "editor.action.rename",
          "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "p",
          "name": "Project",
          "type": "command",
          "command": "workbench.action.replaceInFiles"
        }
      ]
    },
    {
      "key": "g",
      "name": "Git...",
      "type": "bindings",
      "bindings": [
        {
          "key": "/",
          "name": "Search Commits",
          "command": "gitlens.showCommitSearch",
          "type": "command",
          "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "a",
          "name": "Stage",
          "type": "command",
          "command": "git.stage"
        },
        {
          "key": "b",
          "name": "Checkout",
          "type": "command",
          "command": "git.checkout"
        },
        {
          "key": "B",
          "name": "Browse",
          "type": "command",
          "command": "gitlens.openFileInRemote"
        },
        {
          "key": "c",
          "name": "Commit",
          "type": "command",
          "command": "git.commit"
        },
        {
          "key": "C",
          "name": "Cherry Pick",
          "type": "command",
          "command": "gitlens.views.cherryPick"
        },
        {
          "key": "d",
          "name": "Delete Branch",
          "type": "command",
          "command": "git.deleteBranch"
        },
        {
          "key": "f",
          "name": "Fetch",
          "type": "command",
          "command": "git.fetch"
        },
        {
          "key": "F",
          "name": "Pull From",
          "type": "command",
          "command": "git.pullFrom"
        },
        {
          "key": "g",
          "name": "Graph",
          "type": "command",
          "command": "git-graph.view"
        },
        {
          "key": "h",
          "name": "Heatmap",
          "type": "command",
          "command": "gitlens.toggleFileHeatmap"
        },
        {
          "key": "H",
          "name": "History",
          "type": "command",
          "command": "git.viewFileHistory"
        },
        {
          "key": "i",
          "name": "Init",
          "type": "command",
          "command": "git.init"
        },
        {
          "key": "j",
          "name": "Next Change",
          "type": "command",
          "command": "workbench.action.editor.nextChange"
        },
        {
          "key": "k",
          "name": "Previous Change",
          "type": "command",
          "command": "workbench.action.editor.previousChange"
        },
        {
          "key": "l",
          "name": "Toggle Line Blame",
          "type": "command",
          "command": "gitlens.toggleLineBlame",
          "when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "L",
          "name": "Toggle GitLens",
          "type": "command",
          "command": "gitlens.toggleCodeLens",
          "when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "m",
          "name": "Merge",
          "type": "command",
          "command": "git.merge"
        },
        {
          "key": "p",
          "name": "Push",
          "type": "command",
          "command": "git.push"
        },
        {
          "key": "P",
          "name": "Push",
          "type": "command",
          "command": "git.pull"
        },
        {
          "key": "s",
          "name": "Stash",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "S",
          "name": "Status",
          "type": "command",
          "command": "gitlens.showQuickRepoStatus",
          "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "t",
          "name": "Create Tag",
          "type": "command",
          "command": "git.createTag"
        },
        {
          "key": "T",
          "name": "Delete Tag",
          "type": "command",
          "command": "git.deleteTag"
        },
        {
          "key": "U",
          "name": "Unstage",
          "type": "command",
          "command": "git.unstage"
        }
      ]
    },
    {
      "key": "h",
      "name": "Split Horizontal",
      "type": "command",
      "command": "workbench.action.splitEditorDown"
    },
    {
      "key": "i",
      "name": "Insert...",
      "type": "bindings",
      "bindings": [
        {
          "key": "j",
          "name": "Insert line below",
          "type": "command",
          "command": "editor.action.insertLineAfter"
        },
        {
          "key": "k",
          "name": "Insert line above",
          "type": "command",
          "command": "editor.action.insertLineBefore"
        },
        {
          "key": "s",
          "name": "Insert snippet",
          "type": "command",
          "command": "editor.action.insertSnippet"
        }
      ]
    },
    {
      "key": "l",
      "name": "LSP...",
      "type": "bindings",
      "bindings": [
        {
          "key": ";",
          "name": "Refactor",
          "type": "command",
          "command": "editor.action.refactor",
          "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "a",
          "name": "Auto Fix",
          "type": "command",
          "command": "editor.action.autoFix",
          "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
        },
        {
          "key": "d",
          "name": "Definition",
          "type": "command",
          "command": "editor.action.revealDefinition",
          "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
        },
        {
          "key": "D",
          "name": "Declaration",
          "type": "command",
          "command": "editor.action.revealDeclaration"
        },
        {
          "key": "e",
          "name": "Errors",
          "type": "command",
          "command": "workbench.actions.view.problems"
        },
        {
          "key": "f",
          "name": "Format",
          "type": "command",
          "command": "editor.action.formatDocument",
          "when": "editorHasDocumentFormattingProvider && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
        },
        {
          "key": "i",
          "name": "Implementation",
          "type": "command",
          "command": "editor.action.goToImplementation",
          "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
        },
        {
          "key": "l",
          "name": "Code Lens",
          "type": "command",
          "command": "codelens.showLensesInCurrentLine"
        },
        {
          "key": "n",
          "name": "Next Problem",
          "type": "command",
          "command": "editor.action.marker.next",
          "when": "editorFocus"
        },
        {
          "key": "N",
          "name": "Next Problem (Proj)",
          "type": "command",
          "command": "editor.action.marker.nextInFiles",
          "when": "editorFocus"
        },
        {
          "key": "o",
          "name": "Outline",
          "type": "command",
          "command": "outline.focus"
        },
        {
          "key": "p",
          "name": "Prev Problem",
          "type": "command",
          "command": "editor.action.marker.prevInFiles",
          "when": "editorFocus"
        },
        {
          "key": "P",
          "name": "Prev Problem (Proj)",
          "type": "command",
          "command": "editor.action.marker.prev",
          "when": "editorFocus"
        },
        {
          "key": "q",
          "name": "Quick Fix",
          "type": "command",
          "command": "editor.action.quickFix",
          "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "r",
          "name": "References",
          "type": "command",
          "command": "editor.action.goToReferences",
          "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
          "key": "R",
          "name": "Rename",
          "type": "command",
          "command": "editor.action.rename",
          "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "v",
          "name": "View All References",
          "type": "command",
          "command": "references-view.find",
          "when": "editorHasReferenceProvider"
        },
        {
          "key": "s",
          "name": "Go To Symbol",
          "type": "command",
          "command": "workbench.action.gotoSymbol"
        },
        {
          "key": "S",
          "name": "Show All Symbols",
          "type": "command",
          "command": "workbench.action.showAllSymbols"
        }
      ]
    },
    {
      "key": "m",
      "name": "Mark...",
      "type": "bindings",
      "bindings": [
        {
          "key": "c",
          "name": "Clear Bookmarks",
          "type": "command",
          "command": "bookmarks.clear"
        },
        {
          "key": "j",
          "name": "Next Bookmark",
          "type": "command",
          "command": "bookmarks.jumpToNext",
          "when": "editorTextFocus"
        },
        {
          "key": "k",
          "name": "Previous Bookmark",
          "type": "command",
          "command": "bookmarks.jumpToPrevious",
          "when": "editorTextFocus"
        },
        {
          "key": "l",
          "name": "List Bookmarks",
          "type": "command",
          "command": "bookmarks.listFromAllFiles",
          "when": "editorTextFocus"
        },
        {
          "key": "r",
          "name": "Refresh Bookmarks",
          "type": "command",
          "command": "bookmarks.refresh"
        },
        {
          "key": "t",
          "name": "Toggle Bookmark",
          "type": "command",
          "command": "bookmarks.toggle",
          "when": "editorTextFocus"
        },
        {
          "key": "s",
          "name": "Show Bookmarks",
          "type": "command",
          "command": "workbench.view.extension.bookmarks"
        }
      ]
    },
    {
      "key": "M",
      "name": "Minimap",
      "type": "command",
      "command": "editor.action.toggleMinimap"
    },
    {
      "key": "n",
      "name": "No Highlight",
      "type": "command",
      "command": "vscode-neovim.send",
      "args": ":noh<CR>"
    },
    {
      "key": "o",
      "name": "Open...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Directory",
          "type": "command",
          "command": "workbench.action.files.openFolder"
        },
        {
          "key": "r",
          "name": "Recent",
          "type": "command",
          "command": "workbench.action.openRecent"
        },
        {
          "key": "f",
          "name": "File",
          "type": "command",
          "command": "workbench.action.files.openFile"
        }
      ]
    },
    {
      "key": "p",
      "name": "Peek...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Definition",
          "type": "command",
          "command": "editor.action.peekDefinition",
          "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
          "key": "D",
          "name": "Declaration",
          "type": "command",
          "command": "editor.action.peekDeclaration"
        },
        {
          "key": "i",
          "name": "Implementation",
          "type": "command",
          "command": "editor.action.peekImplementation",
          "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
          "key": "p",
          "name": "Toggle Focus",
          "type": "command",
          "command": "togglePeekWidgetFocus",
          "when": "inReferenceSearchEditor || referenceSearchVisible"
        },
        {
          "key": "r",
          "name": "References",
          "type": "command",
          "command": "editor.action.referenceSearch.trigger"
        },
        {
          "key": "t",
          "name": "Type Definition",
          "type": "command",
          "command": "editor.action.peekTypeDefinition"
        }
      ]
    },
    {
      "key": "s",
      "name": "Search...",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "Files",
          "type": "command",
          "command": "workbench.action.quickOpen"
        },
        {
          "key": "t",
          "name": "Text",
          "type": "command",
          "command": "workbench.action.findInFiles"
        }
      ]
    },
    {
      "key": "S",
      "name": "Show...",
      "type": "bindings",
      "bindings": [
        {
          "key": "e",
          "name": "Show explorer",
          "type": "command",
          "command": "workbench.view.explorer"
        },
        {
          "key": "s",
          "name": "Show search",
          "type": "command",
          "command": "workbench.view.search"
        },
        {
          "key": "g",
          "name": "Show source control",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "t",
          "name": "Show test",
          "type": "command",
          "command": "workbench.view.extension.test"
        },
        {
          "key": "r",
          "name": "Show remote explorer",
          "type": "command",
          "command": "workbench.view.remote"
        },
        {
          "key": "x",
          "name": "Show extensions",
          "type": "command",
          "command": "workbench.view.extensions"
        },
        {
          "key": "p",
          "name": "Show problem",
          "type": "command",
          "command": "workbench.actions.view.problems"
        },
        {
          "key": "o",
          "name": "Show output",
          "type": "command",
          "command": "workbench.action.output.toggleOutput"
        },
        {
          "key": "d",
          "name": "Show debug console",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        }
      ]
    },
    {
      "key": "t",
      "name": "Terminal...",
      "type": "bindings",
      "bindings": [
        {
          "key": "t",
          "name": "Toggle Terminal",
          "type": "command",
          "command": "workbench.action.togglePanel"
        },
        {
          "key": "T",
          "name": "Focus Terminal",
          "type": "command",
          "command": "workbench.action.terminal.toggleTerminal",
          "when": "!terminalFocus"
        }
      ]
    },
    {
      "key": "u",
      "name": "UI toggles...",
      "type": "bindings",
      "bindings": [
        {
          "key": "a",
          "name": "Toggle tool/activity bar visibility",
          "type": "command",
          "command": "workbench.action.toggleActivityBarVisibility"
        },
        {
          "key": "b",
          "name": "Toggle side bar visibility",
          "type": "command",
          "command": "workbench.action.toggleSidebarVisibility"
        },
        {
          "key": "j",
          "name": "Toggle panel visibility",
          "type": "command",
          "command": "workbench.action.togglePanel"
        },
        {
          "key": "F",
          "name": "Toggle full screen",
          "type": "command",
          "command": "workbench.action.toggleFullScreen"
        },
        {
          "key": "s",
          "name": "Select theme",
          "type": "command",
          "command": "workbench.action.selectTheme"
        },
        {
          "key": "m",
          "name": "Toggle maximized panel",
          "type": "command",
          "command": "workbench.action.toggleMaximizedPanel"
        },
        {
          "key": "T",
          "name": "Toggle tab visibility",
          "type": "command",
          "command": "workbench.action.toggleTabsVisibility"
        }
      ]
    },
    {
      "key": "v",
      "name": "Split Vertical",
      "type": "command",
      "command": "workbench.action.splitEditor"
    },
    {
      "key": "w",
      "name": "Window...",
      "type": "bindings",
      "bindings": [
        {
          "key": "W",
          "name": "Focus previous editor group",
          "type": "command",
          "command": "workbench.action.focusPreviousGroup"
        },
        {
          "key": "h",
          "name": "Move editor group left",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupLeft"
        },
        {
          "key": "j",
          "name": "Move editor group down",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupDown"
        },
        {
          "key": "k",
          "name": "Move editor group up",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupUp"
        },
        {
          "key": "l",
          "name": "Move editor group right",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupRight"
        },
        {
          "key": "t",
          "name": "Toggle editor group sizes",
          "type": "command",
          "command": "workbench.action.toggleEditorWidths"
        },
        {
          "key": "m",
          "name": "Maximize editor group",
          "type": "command",
          "command": "workbench.action.minimizeOtherEditors"
        },
        {
          "key": "M",
          "name": "Maximize editor group and hide side bar",
          "type": "command",
          "command": "workbench.action.maximizeEditor"
        },
        {
          "key": "=",
          "name": "Reset editor group sizes",
          "type": "command",
          "command": "workbench.action.evenEditorWidths"
        },
        {
          "key": "z",
          "name": "Combine all editors",
          "type": "command",
          "command": "workbench.action.joinAllGroups"
        },
        {
          "key": "d",
          "name": "Close editor group",
          "type": "command",
          "command": "workbench.action.closeEditorsInGroup"
        },
        {
          "key": "x",
          "name": "Close all editor groups",
          "type": "command",
          "command": "workbench.action.closeAllGroups"
        }
      ]
    },
    {
      "key": "x",
      "name": "Extensions",
      "type": "command",
      "command": "workbench.view.extensions"
    },
    {
      "key": "y",
      "name": "Sync...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Download Settings",
          "type": "command",
          "command": "extension.downloadSettings"
        },
        {
          "key": "u",
          "name": "Upload Settings",
          "type": "command",
          "command": "extension.updateSettings"
        }
      ]
    },
    {
      "key": "z",
      "name": "Toggle zen mode",
      "type": "command",
      "command": "workbench.action.toggleZenMode"
    }
  ],
  "workbench.iconTheme": "material-icon-theme",
  "workbench.startupEditor": "welcomePage",
  "workbench.editor.showTabs": true,
  "workbench.list.automaticKeyboardNavigation": false,
  "workbench.settings.editor": "json",
  "workbench.settings.openDefaultSettings": true,
  "workbench.editorAssociations": {
    "*.ipynb": "jupyter-notebook"
  },
  "workbench.editor.highlightModifiedTabs": true,
  "window.menuBarVisibility": "toggle",
  "notebook.cellToolbarLocation": {
    "default": "right",
    "jupyter-notebook": "left"
  },
  "jupyter.textOutputLimit": 0,
  "breadcrumbs.filePath": "off",

  "python.insidersChannel": "daily",
  // "python.condaPath": "$HOME/anaconda3/bin/conda",
  "python.defaultInterpreterPath": "/home/oli/anaconda3/envs/project/bin/python",
  "python.languageServer": "Pylance",
  "python.terminal.executeInFileDir": true,
  "python.terminal.activateEnvironment": true,
  // // "python.terminal.activateEnvInCurrentTerminal": true,
  // "python.linting.pylintPath": "/home/oli/anaconda3/envs/project/bin/pylint",
  "python.linting.pylintEnabled": true,
  "python.linting.pylintArgs": [
    //   "--disable=E401",
    // "--errors-only"
    //   "--generated-members",
    //   "talib.*",
    //   "--disable=E1101",
    //   "--disable=R0913",
    //   "--load-plugin",
    //   "pylint_protobuf"
  ],

  "python.linting.flake8Args": ["--ignore=E501,F401"],
  "python.linting.enabled": true,
  "python.formatting.provider": "black",
  "python.formatting.autopep8Path": "$HOME/anaconda3/bin/autopep8",
  "python.analysis.typeCheckingMode": "off",
  "python.analysis.diagnosticSeverityOverrides": {
    "reportUnboundVariable": "information",
    "reportImplicitStringConcatenation": "warning",
    "reportMissingImports": "none"
  },
  "editor.fontSize": 15,
  "emmet.showSuggestionsAsSnippets": true,
  "editor.suggestSelection": "recentlyUsed",
  "editor.scrollbar.horizontal": "hidden",
  "editor.scrollbar.vertical": "hidden",
  "editor.cursorBlinking": "expand",
  "editor.linkedEditing": true,
  "editor.formatOnSave": true,
  "editor.snippetSuggestions": "bottom",
  "editor.fontFamily": "'FiraCode Nerd Font Mono','Hack Nerd Font', Menlo, Monaco, 'Courier New', monospace",
  "files.exclude": {
    "**/.classpath": true,
    "**/.project": true,
    "**/.settings": true,
    "**/.factorypath": true
  },
  "editor.wordWrap": "wordWrapColumn",
  "editor.largeFileOptimizations": false,
  //"editor.wrappingIndent": "same",
  "editor.wordWrapColumn": 90,
  "editor.rulers": [85],
  "prettier.printWidth": 90,
  "color-highlight.sass.includePaths": [],
  "[markdown]": {
    "editor.wordWrap": "on",
    "editor.quickSuggestions": false
  },
  "[html]": {
    "editor.defaultFormatter": "vscode.html-language-features"
    //"editor.formatOnSaveMode": "modifications"
  },
  "editor.defaultFormatter": "esbenp.prettier-vscode",

  "css.remoteStyleSheets": [
    "https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
  ],

  "AREPL.pythonOptions": ["-u"],

  "editor.minimap.renderCharacters": false,

  "files.autoSave": "onFocusChange",
  "explorer.sortOrder": "type",
  "r.bracketedPaste": true,

  "[python]": {
    "editor.semanticHighlighting.enabled": true
  },
  "editor.semanticTokenColorCustomizations": {
    // Apply to this theme only
    "enabled": true,
    "rules": {
      "magicFunction:python": "#ee0000",
      "function.declaration:python": "#d8d84d",
      "*.decorator:python": "#0000dd",
      // "*.typeHint:python": "#5500aa",
      "*.typeHintComment:python": "#aaaaaa" //#4ec9b0
      // "variable.defaultLibrary": "#4EC9B0",
      // "variable.readonly": "#51a3c4"
    }
  },

  "code-runner.executorMap": {
    "python": "cd $dir && $pythonPath $fullFileName",
    "java": "cd $dir && javac $fileName && java $fileNameWithoutExt",
    "c": "cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt"
  },
  "code-runner.runInTerminal": false,
  "code-runner.clearPreviousOutput": true,
  "code-runner.showExecutionMessage": false,
  "code-runner.enableAppInsights": false,
  // "code-runner.saveFileBeforeRun": true

  "material-icon-theme.folders.theme": "specific",
  "material-icon-theme.folders.color": "#ff7043",
  "oneDarkPro.editorTheme": "oneDarkPro",

  // "terminal.integrated.defaultLocation": "editor",
  "terminal.external.linuxExec": "/usr/bin/xfce4-terminal",
  "terminal.integrated.cursorBlinking": true,
  // // "terminal.integrated.cursorWidth": 3,
  "terminal.integrated.cursorStyle": "block",
  // "terminal.external.osxExec": "iTerm.app",
  "terminal.integrated.profiles.linux": {
    "bash": {
      "path": "bash"
    },
    "zsh": {
      "path": "zsh"
    },
    "fish": {
      "path": "fish"
    },
    "tmux": {
      "path": "tmux",
      "icon": "terminal-tmux"
    },
    "pwsh": {
      "path": "pwsh",
      "icon": "terminal-powershell"
    }
  },
  "terminal.integrated.inheritEnv": false,
  "terminal.integrated.env.linux": {
    "IN_VSCODE": "true"
  },

  "liveServer.settings.donotShowInfoMsg": true,
  "liveServer.settings.AdvanceCustomBrowserCmdLine": "/usr/bin/firefox",
  "liveSassCompile.settings.formats": [
    {
      "format": "compressed",
      "extensionName": ".min.css",
      "savePath": "/dist/css"
    }
  ],
  "liveSassCompile.settings.generateMap": false,

  "prettier.jsxSingleQuote": true,
  "prettier.singleQuote": true,
  "prettier.endOfLine": "auto",
  "prettier.jsxBracketSameLine": true,

  "cSpell.language": "en,en-US",
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "cSpell.userWords": [
    "AKIALNAROAQ",
    "Dayof",
    "EURUSD",
    "POYGON",
    "apaca",
    "appl",
    "astype",
    "baseurl",
    "bbands",
    "box",
    "btcusd",
    "btcusdt",
    "conda",
    "dtformat",
    "dtype",
    "dtypes",
    "ethusd",
    "ethusdt",
    "fafsasfsfuiueiooljjkjj",
    "fe",
    "fname",
    "genfromtxt",
    "getenv",
    "horz",
    "iloc",
    "inplace",
    "jsonify",
    "klines",
    "link",
    "lname",
    "myproject",
    "ntsecuritycon",
    "numpy",
    "pk",
    "pylint",
    "pyplot",
    "pytz",
    "shadow",
    "sidenav",
    "smtplib",
    "tableize",
    "talib",
    "tsla",
    "tulipy",
    "webkit",
    "webkit box shadow",
    "ycmpwwbu",
    "yd"
  ],
  "bracket-pair-colorizer-2.colors": [
    "DeepSkyBlue",
    "MediumSlateBlue",
    "BlueViolet",
    "MediumVioletRed",
    "DeepPink",
    "Red",
    "DarkOrange",
    "Gold",
    "GreenYellow",
    "LimeGreen",
    "LightSeaGreen",
    "DarkTurquoise",
    "DodgerBlue"
  ],
  "rainbowTags.colors": [
    "BlueViolet",
    "MediumVioletRed",
    "DeepPink",
    "Red",
    "DarkOrange",
    "Gold",
    "GreenYellow",
    "LimeGreen",
    "LightSeaGreen",
    "DarkTurquoise",
    "DeepSkyBlue",
    "DodgerBlue",
    "MediumSlateBlue"
  ],
  // "indentRainbow.includedLanguages": ["html"],
  "indentRainbow.colors": [
    "rgba(0,191,255,0.07)",
    "rgba(255,255,64,0.07)",
    "rgba(30,144,255,0.07)",
    "rgba(255,127,255,0.07)",
    "rgba(123,104,238,0.07)",
    "rgba(127,255,127,0.07)",
    "rgba(32,178,170,0.07)",
    "rgba(138,43,226,0.07)",
    "rgba(255,140,0,0.07)",
    "rgba(79,236,236,0.07)",
    "rgba(199,21,133,0.07)",
    "rgba(173,255,47,0.07)",
    "rgba(255,20,147,0.07)",
    "rgba(0,206,209,0.07)",
    "rgba(255,0,0,0.07)",
    "rgba(255,215,0,0.07)",
    "rgba(50,205,50,0.07)"
  ],

  "workbench.colorCustomizations": {
    // "[Default Dark+]": {
    //   "statusBar.background": "#2E2E2E",
    //   "statusBar.foreground": "#8C8C8C",
    //   "statusBarItem.remoteBackground": "#2E2E2E",
    //   "statusBarItem.remoteForeground": "#8C8C8C",
    //   "activityBar.background": "#2E2E2E",
    //   "tab.inactiveBackground": "#2E2E2E"
    // },
    // "[teacher theme dark]": { "statusBar.background": "#007ACC" },
    "[Visual Studio 2019 Dark]": {
      "terminal.ansiBlack": "#191e2a",
      "terminal.foreground": "#f3a238",
      "terminalCursor.foreground": "#0bbe23",
      "panel.background": "#1f2430",
      "panel.border": "#7e8694",
      "panelTitle.activeBorder": "#ffcc66",
      "panelTitle.activeForeground": "#eaf0f1",
      "panelTitle.inactiveForeground": "#707a8c",
      "terminal.background": "#0e0b01",
      //"editor.background": "#1f272b",
      "walkThrough.embeddedEditorBackground": "#232834",
      "list.activeSelectionBackground": "#074228",
      "list.focusBackground": "#155c3b",
      "list.hoverBackground": "#05063b",
      "list.inactiveSelectionBackground": "#133326",
      //"editorMarkerNavigation.background": "#ff0000"
      //"editor.wordHighlightBackground": "#77a8d912"
      // "editor.selectionBackground": "#33415e"
      //"editorGroup.border": "#191e2a",
      "editor.lineHighlightBackground": "#252c3d",
      "errorForeground": "#ff3333",
      // "textLink.foreground": "#ffcc66",
      "textLink.activeForeground": "#ffcc66",
      "dropdown.background": "#787883",
      "activityBar.foreground": "#e7e7e7",
      "editorSuggestWidget.selectedBackground": "#045206",
      "statusBarItem.activeBackground": "#191e2a",
      // "tab.activeBackground": "#03110a",
      // "tab.activeForeground": "#f5f2f2",
      // "tab.hoverBackground": "#444250",
      "tab.hoverForeground": "#FFFFFF",
      "tab.inactiveBackground": "#333036",
      "tab.border": "#48454b",
      "tab.inactiveForeground": "#bebebe",
      "terminal.ansiBrightGreen": "#52c927"
    },

    "[One Dark Pro]": {
      "editor.background": "#1e2127",
      "terminal.foreground": "#abb2bf",
      "terminal.ansiBlack": "#1e2127",
      "terminal.ansiBlue": "#61afef",
      "terminal.ansiCyan": "#56b6c2",
      "terminal.ansiGreen": "#98C379",
      "terminal.ansiMagenta": "#c678dd",
      "terminal.ansiRed": "#e06c75",
      "terminal.ansiWhite": "#abb2bf",
      "terminal.ansiYellow": "#d19a66",
      "terminal.ansiBrightBlack": "#5c6370",
      "terminal.ansiBrightBlue": "#61afef",
      "terminal.ansiBrightCyan": "#56b6c2",
      "terminal.ansiBrightGreen": "#98c379",
      "terminal.ansiBrightMagenta": "#c678dd",
      "terminal.ansiBrightRed": "#e06c75",
      "terminal.ansiBrightWhite": "#ffffff",
      "terminal.ansiBrightYellow": "#d19a66"
    }
  },

  "editor.tokenColorCustomizations": {
    "[Visual Studio 2019 Dark]": {
      "textMateRules": [
        // {
        // "scope": "source.python",
        // "settings": {
        //   "foreground": "#76aae0"
        // }
        // },
        {
          "scope": "meta.function-call.generic",
          "settings": {
            "foreground": "#f39a15"
          }
        },
        {
          "name": "Types declaration and references",
          "scope": [
            "meta.return-type",
            "support.class",
            "support.type",
            "entity.name.type",
            "entity.name.namespace",
            "entity.other.attribute",
            "entity.name.scope-resolution",
            "entity.name.class",
            "storage.type.numeric.go",
            "storage.type.byte.go",
            "storage.type.boolean.go",
            "storage.type.string.go",
            "storage.type.uintptr.go",
            "storage.type.error.go",
            "storage.type.rune.go",
            "storage.type.cs",
            "storage.type.generic.cs",
            "storage.type.modifier.cs",
            "storage.type.variable.cs",
            "storage.type.annotation.java",
            "storage.type.generic.java",
            "storage.type.java",
            "storage.type.object.array.java",
            "storage.type.primitive.array.java",
            "storage.type.primitive.java",
            "storage.type.token.java",
            "storage.type.groovy",
            "storage.type.annotation.groovy",
            "storage.type.parameters.groovy",
            "storage.type.generic.groovy",
            "storage.type.object.array.groovy",
            "storage.type.primitive.array.groovy",
            "storage.type.primitive.groovy"
          ],
          "settings": {
            "foreground": "#4EC9B0"
          }
        },

        {
          "scope": [
            "entity.name.function",
            "entity.name.class",
            "entity.name.namespace",
            "support.function",
            "support.constant.handlebars",
            "source.powershell variable.other.member",
            "entity.name.operator.custom-literal" // See https://en.cppreference.com/w/cpp/language/user_literal
          ],
          "settings": {
            "foreground": "#d8d84d"
          }
        },

        {
          "scope": [
            "meta.return-type",
            "support.class",
            "support.type",
            "entity.name.type",
            "entity.name.class",
            "entity.other.attribute",
            "entity.name.scope-resolution",
            "storage.type.numeric.go",
            "storage.type.byte.go",
            "storage.type.boolean.go",
            "storage.type.string.go",
            "storage.type.uintptr.go",
            "storage.type.error.go",
            "storage.type.rune.go",
            "storage.type.cs",
            "storage.type.generic.cs",
            "storage.type.modifier.cs",
            "storage.type.variable.cs",
            "storage.type.annotation.java",
            "storage.type.generic.java",
            "storage.type.java",
            "storage.type.object.array.java",
            "storage.type.primitive.array.java",
            "storage.type.primitive.java",
            "storage.type.token.java",
            "storage.type.groovy",
            "storage.type.annotation.groovy",
            "storage.type.parameters.groovy",
            "storage.type.generic.groovy",
            "storage.type.object.array.groovy",
            "storage.type.primitive.array.groovy",
            "storage.type.primitive.groovy"
          ],
          "settings": {
            "foreground": "#4EC9B0"
          }
        },
        {
          "scope": "string.quoted.single.python",
          "settings": {
            "foreground": "#ce9178"
          }
        }
        // {
        //   "scope": "source.python",
        //   "settings": {
        //     "foreground": "#DE6D77"
        //   }
        // }
      ]
    },

    "[One Dark Pro]": {
      "textMateRules": [
        {
          "scope": [
            "support.class.component.open.jsx",
            "support.class.component.close.jsx",
            "entity.name.function.js"
          ],
          "settings": {
            "foreground": "#61afef"
          }
        },

        {
          "scope": [
            "variable.other.constant.object.js",

            "punctuation.section.embedded.begin.jsx",
            "punctuation.section.embedded.end.jsx"
          ],
          "settings": {
            "foreground": "#abb2bf"
          }
        },
        {
          "scope": ["punctuation.definition.tag.jsx"],
          "settings": {
            "foreground": "#5c6370"
          }
        },
        {
          "scope": [
            "variable.other.readwrite.js",
            "variable.other.property.js",
            "variable.parameter",
            "variable.other.object.js"
          ],
          "settings": {
            "foreground": "#56b6c2"
          }
        },
        {
          "scope": ["entity.other.attribute-name.jsx"],
          "settings": {
            "foreground": "#e5c07b"
          }
        },
        {
          "scope": [
            "keyword.operator.assignment.js",
            "keyword.operator.assignment.jsx",
            "string.unquoted.js",
            "keyword.operator.typeof.js",
            "meta.embedded.expression.js",
            "constant.other.object.key.js",
            "keyword.operator.logical.js"
          ],
          "settings": {
            "foreground": "#c678dd"
          }
        },
        {
          "scope": ["variable.other.constant.object.js"],
          "settings": {
            "foreground": "#e06c75"
          }
        }
      ]
    }
  },

  "gitlens.advanced.telemetry.enabled": false,
  "gitlens.currentLine.enabled": false,
  "gitlens.hovers.currentLine.over": "line",
  "java.semanticHighlighting.enabled": true,
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  "leetcode.workspaceFolder": "/Users/chris/Repos/leetcode",
  "leetcode.defaultLanguage": "javascript",
  "leetcode.hint.configWebviewMarkdown": false,
  "leetcode.hint.commentDescription": false,
  // "window.zoomLevel": 1,

  "vetur.format.defaultFormatterOptions": {
    "js-beautify-html": {
      "wrap_attributes": "force-expand-multiline"
    },
    "prettyhtml": {
      "printWidth": 100,
      "singleQuote": false,
      "wrapAttributes": false,
      "sortAttributes": false
    }
  },

  "mssql.connections": [],

  "shellLauncher.shells.linux": [
    {
      "shell": "/bin/zsh",
      "args": [
        "-l",
        "/home/oli/anaconda3/bin/activate",
        "/home/oli/anaconda3/bin/anaconda"
      ],
      "label": "Anaconda"
    },
    {
      "shell": "/bin/zsh",
      "label": "zsh"
    },
    {
      "shell": "zsh",
      "args": ["-l"],
      "label": "zsh login shell"
    },
    {
      "shell": "/bin/zsh",
      "args": ["/usr/bin/postgres"],
      "label": "PostgreSQL"
    }
  ],

  "git.confirmSync": false,
  "vsicons.dontShowNewVersionMessage": true,
  "kite.showWelcomeNotificationOnStartup": false,
  "jupyter.alwaysTrustNotebooks": true,
  "terminal.integrated.allowChords": false,
  "jupyter.jupyterServerType": "local",
  "security.workspace.trust.untrustedFiles": "open",
  "markdown.preview.fontFamily": "'FiraCode Nerd Font Mono','Hack Nerd Font',-apple-system, BlinkMacSystemFont, 'Segoe WPC', 'Segoe UI', system-ui, 'Ubuntu', 'Droid Sans', sans-serif",
  "telemetry.enableCrashReporter": false,
  "telemetry.enableTelemetry": false,
  "terminal.integrated.scrollback": 100000000,
  "todo-tree.highlights.customHighlight": {
    "TODO": {
      "icon": "check",
      "type": "line",
      "iconColour": "yellow",
      "foreground": "red",
      "background": "#e1df79"
    },
    "FIXME": {
      "icon": "beaker",
      "iconColour": "red",
      "foreground": "white",
      "background": "red"
    }
  },
  "jupyter.interactiveWindowMode": "perFile",
  "workbench.colorTheme": "Visual Studio 2019 Dark",
  "explorer.confirmDelete": false,
  "editor.minimap.enabled": false
}
